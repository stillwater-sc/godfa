package root

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/stillwater-sc/godfa/api/models"
)

/*VersionOK OK

swagger:response versionOK
*/
type VersionOK struct {

	/*
	  In: Body
	*/
	Payload models.Version `json:"body,omitempty"`
}

// NewVersionOK creates VersionOK with default headers values
func NewVersionOK() *VersionOK {
	return &VersionOK{}
}

// WithPayload adds the payload to the version o k response
func (o *VersionOK) WithPayload(payload models.Version) *VersionOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the version o k response
func (o *VersionOK) SetPayload(payload models.Version) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *VersionOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

/*VersionDefault error

swagger:response versionDefault
*/
type VersionDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewVersionDefault creates VersionDefault with default headers values
func NewVersionDefault(code int) *VersionDefault {
	if code <= 0 {
		code = 500
	}

	return &VersionDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the version default response
func (o *VersionDefault) WithStatusCode(code int) *VersionDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the version default response
func (o *VersionDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the version default response
func (o *VersionDefault) WithPayload(payload *models.Error) *VersionDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the version default response
func (o *VersionDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *VersionDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
